{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAE/B,EAAS,EAAG,AADA,SAAS,aAAa,CAAC,SACb,gBAAgB,CAAC,OA2C7C,SAAS,EAAU,CAAG,EACpB,IAAM,EAAM,EAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,IAI1C,OAFA,EAAI,KAAK,GAEF,SAAS,EAAI,IAAI,CAAC,IAC3B,CA/CA,EAAM,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACE,IAAM,EAAS,EAAE,MAAM,CAEvB,GAAI,AAAqB,SAArB,EAAO,SAAS,CAAa,CAC/B,IAMA,EANM,EAAW,EAAM,IAAI,CAAC,SAAC,CAAA,CAAG,CAAhC,EACE,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,SAAS,CACxB,WAAW,GACX,aAAa,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,GACnD,GAEA,AAAA,CAAA,EAAA,EAAM,OAAO,CAAC,EAAE,AAAF,EAAG,MAAM,CAAvB,KAAA,CAAA,EAAwB,EAAG,GAC7B,CAEA,GAAI,AAAqB,aAArB,EAAO,SAAS,CAAiB,CACnC,IAMA,EANM,EAAe,EAAM,IAAI,CAAC,SAAC,CAAA,CAAG,CAApC,EACE,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,SAAS,CACxB,WAAW,GACX,aAAa,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,GACnD,GAEA,AAAA,CAAA,EAAA,EAAM,OAAO,CAAC,EAAE,AAAF,EAAG,MAAM,CAAvB,KAAA,CAAA,EAAwB,EAAG,GAC7B,CAEA,GAAI,AAAqB,QAArB,EAAO,SAAS,CAAY,CAC9B,IAIA,EAJM,EAAU,EAAM,IAAI,CACxB,SAAC,CAAA,CAAM,CADT,EACkB,OAAA,EAAK,KAAK,CAAC,EAAE,CAAC,SAAS,CAAG,EAAK,KAAK,CAAC,EAAE,CAAC,SAAS,A,GAGnE,AAAA,CAAA,EAAA,EAAM,OAAO,CAAC,EAAE,AAAF,EAAG,MAAM,CAAvB,KAAA,CAAA,EAAwB,EAAG,GAC7B,CAEA,GAAI,AAAqB,WAArB,EAAO,SAAS,CAAe,CACjC,IAKA,EALM,EAAa,EAAM,IAAI,CAC3B,SAAC,CAAA,CAAG,CADN,EAEI,OAAA,EAAU,EAAE,KAAK,CAAC,EAAE,CAAC,SAAS,EAAI,EAAU,EAAE,KAAK,CAAC,EAAE,CAAC,SAAS,C,GAGpE,AAAA,CAAA,EAAA,EAAM,OAAO,CAAC,EAAE,AAAF,EAAG,MAAM,CAAvB,KAAA,CAAA,EAAwB,EAAG,GAC7B,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar tableBody = document.querySelector(\"tbody\");\nvar ceils = _to_consumable_array(tableBody.querySelectorAll(\"tr\"));\ntable.addEventListener(\"click\", function(e) {\n    var target = e.target;\n    if (target.innerText === \"Name\") {\n        var _table_tBodies_;\n        var sortName = ceils.sort(function(a, b) {\n            return a.cells[0].innerHTML.toLowerCase().localeCompare(b.cells[0].innerHTML.toLowerCase());\n        });\n        (_table_tBodies_ = table.tBodies[0]).append.apply(_table_tBodies_, _to_consumable_array(sortName));\n    }\n    if (target.innerText === \"Position\") {\n        var _table_tBodies_1;\n        var sortPosition = ceils.sort(function(a, b) {\n            return a.cells[1].innerHTML.toLowerCase().localeCompare(b.cells[1].innerHTML.toLowerCase());\n        });\n        (_table_tBodies_1 = table.tBodies[0]).append.apply(_table_tBodies_1, _to_consumable_array(sortPosition));\n    }\n    if (target.innerText === \"Age\") {\n        var _table_tBodies_2;\n        var sortAge = ceils.sort(function(rowA, rowB) {\n            return rowA.cells[2].innerHTML - rowB.cells[2].innerHTML;\n        });\n        (_table_tBodies_2 = table.tBodies[0]).append.apply(_table_tBodies_2, _to_consumable_array(sortAge));\n    }\n    if (target.innerText === \"Salary\") {\n        var _table_tBodies_3;\n        var sortSalary = ceils.sort(function(a, b) {\n            return getNumber(a.cells[3].innerHTML) - getNumber(b.cells[3].innerHTML);\n        });\n        (_table_tBodies_3 = table.tBodies[0]).append.apply(_table_tBodies_3, _to_consumable_array(sortSalary));\n    }\n});\nfunction getNumber(str) {\n    var num = str.split(\",\").join(\"\").split(\"\");\n    num.shift();\n    return parseInt(num.join(\"\"));\n}\n\n//# sourceMappingURL=index.2196bffd.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst tableBody = document.querySelector('tbody');\nconst ceils = [...tableBody.querySelectorAll('tr')];\n\ntable.addEventListener('click', (e) => {\n  const target = e.target;\n\n  if (target.innerText === 'Name') {\n    const sortName = ceils.sort((a, b) => {\n      return a.cells[0].innerHTML\n        .toLowerCase()\n        .localeCompare(b.cells[0].innerHTML.toLowerCase());\n    });\n\n    table.tBodies[0].append(...sortName);\n  }\n\n  if (target.innerText === 'Position') {\n    const sortPosition = ceils.sort((a, b) => {\n      return a.cells[1].innerHTML\n        .toLowerCase()\n        .localeCompare(b.cells[1].innerHTML.toLowerCase());\n    });\n\n    table.tBodies[0].append(...sortPosition);\n  }\n\n  if (target.innerText === 'Age') {\n    const sortAge = ceils.sort(\n      (rowA, rowB) => rowA.cells[2].innerHTML - rowB.cells[2].innerHTML,\n    );\n\n    table.tBodies[0].append(...sortAge);\n  }\n\n  if (target.innerText === 'Salary') {\n    const sortSalary = ceils.sort(\n      (a, b) =>\n        getNumber(a.cells[3].innerHTML) - getNumber(b.cells[3].innerHTML),\n    );\n\n    table.tBodies[0].append(...sortSalary);\n  }\n});\n\nfunction getNumber(str) {\n  const num = str.split(',').join('').split('');\n\n  num.shift();\n\n  return parseInt(num.join(''));\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","table","document","querySelector","ceils","tableBody","querySelectorAll","getNumber","str","num","split","join","shift","parseInt","addEventListener","e","target","innerText","_table_tBodies_","sortName","sort","a","b","cells","innerHTML","toLowerCase","localeCompare","tBodies","append","apply","_table_tBodies_1","sortPosition","_table_tBodies_2","sortAge","rowA","rowB","_table_tBodies_3","sortSalary"],"version":3,"file":"index.2196bffd.js.map"}